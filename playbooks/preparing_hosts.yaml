---
- hosts: master
  gather_facts: false
  become: true
  tasks:
    - firewalld:
        port: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop: "{{ required_ports + (cni_required_ports | default([])) }}"
      when: enable_firewalld is defined and enable_firewalld|bool

- hosts: worker
  gather_facts: false
  become: true
  tasks:
    - firewalld:
        port: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      loop: "{{ required_ports + (cni_required_ports | default([]))}}"
      when: enable_firewalld is defined and enable_firewalld|bool

- hosts: all
  gather_facts: false
  become: true
  tasks:
    - name: get swap state
      shell: swapon -v
      register: swap_state
      check_mode: false
      changed_when: false

    - name: swap off
      shell: swapoff -a
      when: swap_state.stdout != ''

    - name: swap check (/etc/fstab)
      shell: grep -v "\s*#" /etc/fstab | awk '{print $2}' | grep swap -c
      register: swap_state_in_fstab
      check_mode: false
      changed_when: false
      ignore_errors: true

    - name: disable swap (/etc/fstab)
      replace:
        path: /etc/fstab
        regexp: ([^\s]+\s+swap\s+.*)
        replace: '# \1'
      when: swap_state_in_fstab.stdout != '0'

    - name: cni0 set to trusted zone
      firewalld:
        zone: trusted
        interface: cni0
        permanent: yes
        immediate: yes
        state: enabled
      when: enable_firewalld is defined and enable_firewalld|bool

    - name: disable firewalld
      systemd:
        state: stopped
        enabled: no
        name: firewalld
      when: not (enable_firewalld is defined and enable_firewalld|bool)

    - name: confiture sysctl
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: no
        reload: no
        sysctl_file: /etc/sysctl.d/k8s.conf
      loop:
        - key: net.bridge.bridge-nf-call-iptables
          value: '1'
        - key: net.bridge.bridge-nf-call-ip6tables
          value: '1'
    - name: ensure sysctl configure
      shell: sysctl --system

    - name: install additional packages
      yum:
        name: "{{ additional_packages }}"
        state: latest
      # todo: 処理位置は別途考える

    - name: setup docker yum repository
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        mode: '0644'
      # 手順としては yum-config-manager --add-repo を実行することになっている。
      # コマンドの処理内容はwgetなのでget_urlで代替
      # https://kubernetes.io/docs/setup/production-environment/container-runtimes/#tab-cri-docker-installation-1

    - name: install docker
      yum:
        name: "{{ cri_required_packages }}"
        state: latest

    - name: create docker configure directory
      file:
        path: /etc/docker/
        state: directory
        mode: 0775

    - name: overlay2 configure to docker
      copy:
        content: |
          {
            "storage-driver": "overlay2"
          }
        dest: /etc/docker/daemon.json 
        mode: 0644
    - name: start and enable docker
      systemd:
        state: restarted
        daemon_reload: yes
        enabled: yes
        name: docker

    # kubeadm
    - name: kubeadm, kubelet, kubectl
      yum_repository:
        name: kubernetes
        file: kubernetes
        description: Kubernetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: SELinux set permissive
      selinux:
        policy: targeted
        state: permissive

    - name: install kubelet/kubeadm/kubectl
      yum:
        name: "{{ k8s_required_packages }}"
        state: latest

    - name: start and enable kubelet
      systemd:
        state: restarted
        daemon_reload: yes
        enabled: yes
        name: kubelet
